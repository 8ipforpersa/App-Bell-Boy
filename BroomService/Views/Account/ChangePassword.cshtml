@using BroomService.Resources;
@model BroomService.ViewModels.ChangePasswordViewModel

@{
    Layout = "~/Views/Shared/_ProfileLayout.cshtml";
}

<section class="login_main d-flex align-items-center justify-content-center">
    <div class="container">
        <div class="login_box mx-auto">
            <div class="login_content mx-auto">

                <h2>@Resource.change_password</h2>
                <div class="login_form">
                    @using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post))
                    {
                        @Html.HiddenFor(a => a.userId)
                        if (TempData["ErrorMsg"] != null)
                        {
                            <div class="alert alert-danger" role="alert">
                                @TempData["ErrorMsg"]
                            </div>
                        }
                        if (TempData["SuccessMsg"] != null)
                        {
                            <div class="alert alert-success" role="alert">
                                @TempData["SuccessMsg"]
                            </div>
                        }
                        <div class="form-group">
                            <label class="custom-register-label">@Resource.old_password</label>
                            <div class="custom_input">
                                @Html.PasswordFor(m => m.oldPassword,
                                          new
                                          {
                                              @class = "form-control form_edit_input",
                                              placeholder = Resource.enter_old_password,
                                              @required = "required"
                                          })

                            </div>
                        </div>

                        <div class="form-group">
                            <label class="custom-register-label">@Resource.new_password</label>
                            <div class="custom_input">
                                @Html.PasswordFor(m => m.newPassword,
                                          new
                                          {
                                              @class = "form-control form_edit_input",
                                              placeholder = Resource.enter_new_password,
                                              @required = "required"
                                          })

                            </div>
                        </div>

                        <div class="form-group">
                            <label class="custom-register-label">@Resource.confirm_password</label>
                            <div class="custom_input">
                                @Html.PasswordFor(m => m.confirmPassword,
                                          new
                                          {
                                              @class = "form-control form_edit_input",
                                              placeholder = Resource.enter_confirm_password,
                                              @required = "required",
                                              oninput = "check(this)"
                                          })

                            </div>
                        </div>

                        <div class="col-12 d-flex justify-content-end">
                            <button type="submit" class="btn arrow_btn_box">
                                <img src="~/Content/images/submit_next_btn.png" alt="next arrow" />
                            </button>
                        </div>

                    }
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    function check(input) {
        if (input.value != document.getElementById('newPassword').value) {
            input.setCustomValidity('Password Must be Matching.');
        } else {
            // input is valid -- reset the error message
            input.setCustomValidity('');
        }
    }
    $(function () {
        $('.navbar-nav li a').each(function () {
            $(this).parent().removeClass('active');
            var $this = $(this);
            matching_value = $this.attr('href');
            if (matching_value == "/Account/Profile") {
                $(this).parent().addClass('active');
            }
        });
    });
</script>
